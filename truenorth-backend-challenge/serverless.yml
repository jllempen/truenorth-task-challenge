## x-api-key: bAa5TZ4JrZ5r7CWaBso5v94eAuz4phZU56rqEt0f

service: ACFTASKS001

provider:
  name: aws
  runtime: nodejs14.x
  stage: DEV
  environment:
    TASK_TABLE: DYN-${opt:stage, self:provider.stage}-TASKS
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
        - dynamodb:UpdateItem
      Resource: "*"

package:
 exclude:
  - node_modules/aws-sdk/**

plugins:
  - serverless-offline

functions:
  createTask:
    handler: src/app.handler
    memorySize: 128
    description: Creates tasks and saves them to a DynamoDB Table.
    events:
      - http: 
          path: tasks/create
          method: get
          #private: true
          integration: lambda
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          request:
            template:
              application/json: ${file(src/serverless/request/createTask.vm)}
          response:
            ${file(src/serverless/http-response.yaml)}
      - http: 
          path: tasks/get
          method: get
          #private: true
          integration: lambda
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          request:
            template:
              application/json: ${file(src/serverless/request/getTasks.vm)}
          response:
            ${file(src/serverless/http-response.yaml)}
      - http: 
          path: tasks/update
          method: put
          #private: true
          integration: lambda
          cors:
            origin: '*'
          request:
            template:
              application/json: ${file(src/serverless/request/updateTask.vm)}
          response:
            ${file(src/serverless/http-response.yaml)}

